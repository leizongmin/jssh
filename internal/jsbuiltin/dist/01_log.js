{function println(...args){jssh.print(...args),jssh.print("\n")}function eprintln(...args){jssh.eprint(...args),jssh.eprint("\n")}const log={};{const levels={ERROR:1,WARN:2,INFO:3,DEBUG:4},logLevel=levels[(jssh.__env.JSSH_LOG||"INFO").toUpperCase()],reset="[0m",red=line=>"[31;1m"+line+reset,green=line=>"[32;1m"+line+reset,yellow=line=>"[33;1m"+line+reset,gray=line=>"[2;1m"+line+reset;log.debug=function(message,...args){logLevel>=levels.DEBUG&&jssh.stdoutlog(gray(jssh.format(message,...args)))},log.info=function(message,...args){logLevel>=levels.INFO&&jssh.stdoutlog(green(jssh.format(message,...args)))},log.warn=function(message,...args){logLevel>=levels.WARN&&jssh.stderrlog(yellow(jssh.format(message,...args)))},log.error=function(message,...args){logLevel>=levels.ERROR&&jssh.stderrlog(red(jssh.format(message,...args)))},log.fatal=function(message,...args){log.error(message,...args),jssh.exit(1)}}jssh.println=println,jssh.eprintln=eprintln,jssh.log=log,Object.freeze(log)}
