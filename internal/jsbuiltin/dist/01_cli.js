const cli={};{const _args=cli._args=[],_opts=cli._opts={},getFlagName=s=>s.startsWith("--")?s.slice(2):s.startsWith("-")?s.slice(1):void 0;for(let i=2;i<__args.length;i++){const v=__args[i],v2=__args[i+1];if(v.startsWith("-")){const r=v.match(/^--?([\w\-_]+)=(.*)$/);r?_opts[r[1]]=r[2]:void 0===v2||v2.startsWith("-")?_opts[getFlagName(v)]=!0:(_opts[getFlagName(v)]=v2,i++)}else _args.push(v)}cli.get=function(n){return("number"==typeof n?_args:_opts)[n]},cli.bool=function(n){return!1!==_opts[n]&&void 0!==_opts[n]&&(!0===_opts[n]||!("0"===(n=_opts[n].toLowerCase())||"f"===n||"false"===n))},cli.args=function(){return[..._args]},cli.opts=function(){return{..._opts}},cli.prompt=function(message){return message&&print(message),readline()},cli._subcommand={},cli.subcommand=function(name,callback){if("function"!=typeof callback)throw new TypeError("callback expected a function");if(cli._subcommand[name])throw new Error(`subcommand ${name} is already registered`);cli._subcommand[name]=callback},cli.subcommandstart=function(){var name=cli.get(0);if(cli._subcommand[name])return cli._subcommand[name]();if(cli._subcommand["*"])return cli._subcommand["*"]();throw new Error("unrecognized subcommand "+name)}}
